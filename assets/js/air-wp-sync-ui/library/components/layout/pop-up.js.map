{"version":3,"file":"pop-up.js","sources":["../../../src/components/layout/pop-up/PopUp.tsx"],"sourcesContent":["import {PopUpProps} from \"./PopUp.types\";\nimport {createPortal} from \"react-dom\";\nimport classnames from \"classnames\";\nimport \"./PopUp.css\";\n\n/**\n * @typedef {function(isOpen: boolean):void} SetIsOpenFunction\n */\n\n/**\n * PopUp. <br />\n * Set initial state of the pop-up with `isOpen` prop, pass `setIsOpen` function for the pop-up to be able to close itself.\n *\n * @param {boolean} isOpen Open state.\n * @param {SetIsOpenFunction} setIsOpen Function to toggle isOpen state.\n * @param {React.ReactNode} children Children\n * @constructor\n */\nconst PopUp = ({ isOpen, setIsOpen, children }:PopUpProps) => {\n\n    return createPortal(\n        <div\n\t\t\tclassName={ classnames({\n\t\t\t\t'airwpsync-c-pop-up': true,\n\t\t\t\t'airwpsync-c-pop-up--is-open': isOpen,\n\t\t\t}) }\n\t\t\tonClick={ () => setIsOpen(!isOpen) }\n\t\t>\n\t\t\t<div className={ `airwpsync-c-pop-up__inner ` } onClick={ (event) => event.stopPropagation() }>\n\t\t\t\t{ children }\n\t\t\t</div>\n\t\t</div>,\n\t\tdocument.body\n    );\n};\nexport default PopUp;\n"],"names":["_jsx"],"mappings":";;;;AAKA;;AAEG;AAEH;;;;;;;;AAQG;AACG,MAAA,KAAK,GAAG,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAa,KAAI;AAEzD,IAAA,OAAO,YAAY,CACfA,GAAA,CAAA,KAAA,EAAA,EACL,SAAS,EAAG,UAAU,CAAC;AACtB,YAAA,oBAAoB,EAAE,IAAI;AAC1B,YAAA,6BAA6B,EAAE,MAAM;AACrC,SAAA,CAAC,EACF,OAAO,EAAG,MAAM,SAAS,CAAC,CAAC,MAAM,CAAC,EAElC,QAAA,EAAAA,GAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAG,4BAA4B,EAAG,OAAO,EAAG,CAAC,KAAK,KAAK,KAAK,CAAC,eAAe,EAAE,EACzF,QAAA,EAAA,QAAQ,GACL,EACD,CAAA,EACN,QAAQ,CAAC,IAAI,CACV,CAAC;AACN;;;;"}