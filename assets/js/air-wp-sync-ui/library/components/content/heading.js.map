{"version":3,"file":"heading.js","sources":["../../../src/components/content/heading/Heading.tsx"],"sourcesContent":["import {HeadingProps} from \"./Heading.types\";\nimport React from \"react\";\nimport './Heading.css';\n\n/**\n * Heading.\n *\n * `semanticLevel` follows `level` parameter if not defined.\n *\n * @param {React.ReactNode} children Children\n * @param {(1 | 2 | 3 | 4 | 5 | 6)} semanticLevel Semantic level (h1, h2, ...)\n * @param {(1 | 2 | 3 | 4 | 5 | 6)} level Level (visual)\n * @param {string} emoji Emoji that will be displayed in front of the title.\n * @return {Element}\n */\nconst Heading = ({ children, semanticLevel, emoji, level = 2 }:HeadingProps) => {\n\tif (!semanticLevel) {\n\t\tsemanticLevel = level;\n\t}\n\tlet Tag = `h${semanticLevel}` as keyof React.JSX.IntrinsicElements;\n\n    return (\n        <Tag\n\t\t\tclassName={ `airwpsync-c-heading airwpsync-c-heading--lvl-${level} ` }\n\t\t\tdata-emoji={ emoji }\n\t\t>{ children }</Tag>\n    );\n};\n\nexport default Heading;\n"],"names":["_jsx"],"mappings":";;AAIA;;;;;;;;;;AAUG;AACH,MAAM,OAAO,GAAG,CAAC,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,KAAK,GAAG,CAAC,EAAe,KAAI;IAC9E,IAAI,CAAC,aAAa,EAAE;QACnB,aAAa,GAAG,KAAK,CAAC;AACtB,KAAA;AACD,IAAA,IAAI,GAAG,GAAG,CAAI,CAAA,EAAA,aAAa,EAAuC,CAAC;AAEhE,IAAA,QACIA,GAAA,CAAC,GAAG,EAAA,EACT,SAAS,EAAG,CAAA,6CAAA,EAAgD,KAAK,CAAA,CAAA,CAAG,gBACvD,KAAK,EAAA,QAAA,EAChB,QAAQ,EAAA,CAAQ,EACf;AACN;;;;"}